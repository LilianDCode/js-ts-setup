name: CI

on: [push, pull_request]

jobs:
  shellcheck:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      name: Checkout code
    - name: Install ShellCheck
      run: sudo apt-get install -y shellcheck
    - name: Lint the scripts
      run: |
        shellcheck setup.sh

  test-setup:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, ubuntu-22.04, ubuntu-24.04]
    steps:
    - name: Uninstall Node, npm, and tsc
      run: |
        apt remove --purge -y nodejs npm typescript
    - uses: actions/checkout@v2
      name: Checkout code
    - name: Make scripts executable
      run: chmod +x setup.sh
    - name: Install VS Code
      run: curl -fsSL https://raw.githubusercontent.com/LilianDCode/ubuntu-dev-setup/main/setup.sh | sudo bash -s -- --vscode
    - name: Run setup script
      run: sudo ./setup.sh
    - name: Source the .bashrc file
      run: source ~/.bashrc
    - name: Check NPM installation
      run: |
        command -v npm
        if ! command -v npm &> /dev/null; then
          echo "npm not installed correctly"
          exit 1
        fi
    - name: Check Node installation
      run: |
        command -v node
        if ! command -v node &> /dev/null; then
          echo "Node not installed correctly"
          exit 1
        fi
    - name: Check Typescript installation
      run: |
        command -v tsc
        if ! command -v tsc &> /dev/null; then
          echo "Typescript not installed correctly"
          exit 1
        fi
    - name: Check Prettier installation
      run: |
        if ! command -v prettier &> /dev/null; then
          echo "prettier not installed correctly"
          exit 1
        fi
    - name: Check Jest installation
      run: |
        if ! command -v jest &> /dev/null; then
          echo "jest not installed correctly"
          exit 1
        fi
    - name: Check ESLint installation
      run: |
        if ! command -v eslint &> /dev/null; then
          echo "eslint not installed correctly"
          exit 1
        fi
    - name: Check VS Code extensions installation
      run: |
        EXTENSIONS=$(code --list-extensions)
        EXPECTED_EXTENSIONS="dbaeumer.vscode-eslint esbenp.prettier-vscode ms-vscode.vscode-typescript-tslint-plugin xabikos.javascriptsnippets christian-kohler.npm-intellisense christian-kohler.path-intellisense"
        for EXTENSION in $EXPECTED_EXTENSIONS; do
          if ! echo "$EXTENSIONS" | grep -q "$EXTENSION"; then
            echo "VS Code extension $EXTENSION not installed correctly"
            exit 1
          fi
        done

  release:
    needs: test-setup
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      issues: write
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "lts/*"

      - name: Install semantic-release
        run: npm install -g semantic-release @semantic-release/changelog @semantic-release/git @semantic-release/github @semantic-release/commit-analyzer @semantic-release/release-notes-generator

      - name: Read VERSION file
        id: read_version
        run: echo "VERSION=$(cat VERSION)" >> $GITHUB_ENV

      - name: Run Semantic Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release
        