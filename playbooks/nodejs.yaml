---
- name: Setup JavaScript/TypeScript Environment
  hosts: localhost
  become: yes

  tasks:
    - name: Include common tasks
      include_tasks: common.yaml

    - name: Install required packages for nvm
      apt:
        name:
          - curl
          - build-essential
        state: present

    - name: Set NVM_DIR using nvm logic
      shell: |
        if [ -z "${XDG_CONFIG_HOME-}" ]; then
          printf %s "{{ '/home/' + ansible_env.SUDO_USER }}/.nvm"
        else
          printf %s "${XDG_CONFIG_HOME}/nvm"
        fi
      register: nvm_dir_output

    - name: Set NVM_DIR fact
      set_fact:
        nvm_dir: "{{ nvm_dir_output.stdout }}"

    - name: Download nvm install script
      become: no
      get_url:
        url: https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh
        dest: /tmp/nvm_install.sh
        mode: '0755'

    - name: Check nvm dir variable
      debug:
        var: nvm_dir

    - name: Install nvm
      become: no
      command: bash /tmp/nvm_install.sh
      args:
        creates: "{{ nvm_dir + '/nvm.sh' }}"
      register: nvm_install_result

    - name: Log nvm installation output
      become: no
      debug:
        var: nvm_install_result.stdout_lines

    - name: Remove nvm installation script
      file:
        path: /tmp/nvm_install.sh
        state: absent

    - name: Install Node.js
      become: no
      environment:
        NVM_DIR: "{{ nvm_dir }}"
      shell: . "{{ nvm_dir + '/nvm.sh' }}" && nvm install {{ item }}
      args:
        executable: /bin/bash
      with_items:
        - "20"

    - name: Verify Node.js version
      become: no
      environment:
        NVM_DIR: "{{ nvm_dir }}"
      shell: . "{{ nvm_dir + '/nvm.sh' }}" && node -v
      args:
        executable: /bin/bash